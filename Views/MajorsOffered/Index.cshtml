@model PaginatedList<UniPlanner.Models.MajorsOffered>

@{
    ViewData["Title"] = "MajorsOffered";
    @using Microsoft.AspNetCore.Authorization
    @inject IAuthorizationService AuthorizationService
}

<h1>Majors Offered List</h1>
@if (User.IsInRole("Admin"))
                    {
<p>
    <a asp-action="Create">Create New</a>
</p>
                    }
<!--Form for Search button linking to index method in the controller-->
<form asp-controller="MajorsOffered" asp-action="Index">
    <p>
            Major Name: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Link</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["programmeSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Programme</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["universitySort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">University</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    <!--Anchor to follow link to university's page-->
                    <a href=@Html.DisplayFor(modelItem => item.Link) target="_blank">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UniProgramme.Programme.Name)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UniProgramme.UniversityInfo.Name)
                </td>
                <td>
                    <!--CUD operation links to appropriate view pages-->
                    @if (User.IsInRole("Admin"))
                    {
                <a asp-action="Edit" asp-route-id="@item.MajorsOfferedID">Edit</a> 
                        
                <a asp-action="Delete" asp-route-id="@item.MajorsOfferedID">Delete</a>
                
                <a asp-action="Details" asp-route-id="@item.MajorsOfferedID">Details</a>
                    }
                   
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

