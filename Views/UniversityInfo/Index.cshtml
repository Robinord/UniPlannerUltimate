@model PaginatedList<UniPlanner.Models.UniversityInfo>

@{
    ViewData["Title"] = "UniversityInfo";
    @using Microsoft.AspNetCore.Authorization
    @inject IAuthorizationService AuthorizationService
}

<h1>University Information</h1>
@if (User.IsInRole("Admin"))
                    {
<p>
    <a asp-action="Create">Create New</a>
</p>
                    }
<form asp-controller="UniversityInfo" asp-action="Index">
    <p>
        Uni Name: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CitySort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">City</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RegionSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Region</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["THErankSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">THE Rank</a>
            </th>
            <th></a>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["QSrankSort"]">QS Rank</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ARWUrankSort"]">ARWU Rank</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.THErank)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QSrank)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ARWUrank)
            </td>
            <td>
                    @if (User.IsInRole("Admin"))
                    {
                <a asp-action="Edit" asp-route-id="@item.UniversityInfoID">Edit</a> 
                
                <a asp-action="Delete" asp-route-id="@item.UniversityInfoID">Delete</a>

                        <a asp-action="Details" asp-route-id="@item.UniversityInfoID">Details</a>
                    }
                    
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

